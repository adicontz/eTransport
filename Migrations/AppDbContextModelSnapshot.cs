// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eTransport.Data;

namespace eTransport.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("eTransport.Models.Locatie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descriere")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagineUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LocatieId")
                        .HasColumnType("int");

                    b.Property<string>("Nume")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LocatieId");

                    b.ToTable("Locatii");
                });

            modelBuilder.Entity("eTransport.Models.MarcaUtilaj", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Detalii")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagineUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nume")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MarciUtilaje");
                });

            modelBuilder.Entity("eTransport.Models.Serviciu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descriere")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagineUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LocatieId")
                        .HasColumnType("int");

                    b.Property<int>("MarcaUtilajId")
                        .HasColumnType("int");

                    b.Property<string>("Nume")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Pret")
                        .HasColumnType("float");

                    b.Property<int>("ServiciuCategorie")
                        .HasColumnType("int");

                    b.Property<DateTime>("Timp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("LocatieId");

                    b.HasIndex("MarcaUtilajId");

                    b.ToTable("Servicii");
                });

            modelBuilder.Entity("eTransport.Models.Sofer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Biografie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagineUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeComplet")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Soferi");
                });

            modelBuilder.Entity("eTransport.Models.SoferiServicii", b =>
                {
                    b.Property<int>("SoferId")
                        .HasColumnType("int");

                    b.Property<int>("ServiciuId")
                        .HasColumnType("int");

                    b.HasKey("SoferId", "ServiciuId");

                    b.HasIndex("ServiciuId");

                    b.ToTable("SoferiServicii");
                });

            modelBuilder.Entity("eTransport.Models.Locatie", b =>
                {
                    b.HasOne("eTransport.Models.Locatie", null)
                        .WithMany("Locatii")
                        .HasForeignKey("LocatieId");
                });

            modelBuilder.Entity("eTransport.Models.Serviciu", b =>
                {
                    b.HasOne("eTransport.Models.Locatie", "Locatie")
                        .WithMany()
                        .HasForeignKey("LocatieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eTransport.Models.MarcaUtilaj", "MarcaUtilaj")
                        .WithMany("Servicii")
                        .HasForeignKey("MarcaUtilajId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Locatie");

                    b.Navigation("MarcaUtilaj");
                });

            modelBuilder.Entity("eTransport.Models.SoferiServicii", b =>
                {
                    b.HasOne("eTransport.Models.Serviciu", "Serviciu")
                        .WithMany("SoferiServicii")
                        .HasForeignKey("ServiciuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eTransport.Models.Sofer", "Sofer")
                        .WithMany("SoferiServicii")
                        .HasForeignKey("SoferId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Serviciu");

                    b.Navigation("Sofer");
                });

            modelBuilder.Entity("eTransport.Models.Locatie", b =>
                {
                    b.Navigation("Locatii");
                });

            modelBuilder.Entity("eTransport.Models.MarcaUtilaj", b =>
                {
                    b.Navigation("Servicii");
                });

            modelBuilder.Entity("eTransport.Models.Serviciu", b =>
                {
                    b.Navigation("SoferiServicii");
                });

            modelBuilder.Entity("eTransport.Models.Sofer", b =>
                {
                    b.Navigation("SoferiServicii");
                });
#pragma warning restore 612, 618
        }
    }
}
